spring:
  profiles:
    active: local
    group:
      local: local, common, secret
      blue: blue, common, secret
      green: green, common, secret

  server:
    env: blue
    liveServerIp: 13.125.19.26

  config:
    import: optional:file:.env[.properties]

  datasource:
    url: jdbc:mysql://${MYSQL_URL}:${MYSQL_PORT}/${MYSQL_DB}
    username: ${MYSQL_USER}
    password: ${MYSQL_PW}
    driver-class-name: com.mysql.cj.jdbc.Driver


  sql:
    init:
      mode: never

  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        show_sql: true
        format_sql: true
        use_sql_comments: true
        hbm2ddl:
          auto: update
        default_batch_fetch_size: 1000

server:
  port: 8080

---

spring:
  config:
    activate:
      on-profile: blue

  server:
    port: 8080
    serverAddress: ${LIVE_SERVER_IP}

serverName: blue_server

---

spring:
  config:
    activate:
      on-profile: green

  server:
    port: 8081
    serverAddress: ${LIVE_SERVER_IP}

serverName: green_server

---

spring:
  config:
    activate:
      on-profile: local

  server:
    port: 8080
    serverAddress: localhost

serverName: local_server

---

spring:
  config:
    activate:
      on-profile: common

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect

server:
  port: 8080

swagger:
  tag:
    auth: '01. 로그인/회원가입'
    my: '02. 내 정보 - 기본'
    my-product: '03. 내 정보 - 체험 내역'
    my-delivery: '04. 내 정보 - 배송지'
    my-ticket: '05. 내 정보 - 티켓'
    product: '06. 시제품 - 기본'
    product-etc: '07. 시제품 - 신청/리뷰'
    product-search: '08. 시제품 - 최근 검색어'
    like: '09. 좋아요(북마크)'
    alarm: '10. 알림'
    pay: '11. 카카오페이 결제'
    enterprise-auth: '12. 기업 로그인/회원가입'
    enterprise-product: '13. 기업 시제품 - 조회, 등록, 삭제'
    enterprise-event: '14. 기업 체험(이벤트) - 조회, 등록, 삭제'
    enterprise-userlist: '15. 신청자 목록 - 조회, 상태 수정'
    enterprise-review: '16. 기업 시제품 - 설문조사'
    test: 'A. Test API'

spring-doc:
  swagger-ui:
    tags-sorter: alpha
    operations-sorter: method

cloud:
  aws:
    s3:
      bucket: prototyne
      path: # 이미지 디렉터리 (가게, 상품, 피드백 ..)
        test: test
    region:
      static: ap-northeast-2
    stack:
      auto: false
    credentials:
      accessKey: ${AWS_ACCESS_KEY_ID}
      secretKey: ${AWS_SECRET_ACCESS_KEY}